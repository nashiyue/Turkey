package turkey.client.net;

import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

import turkey.core.utils.Utils;

public class FileThread extends Thread{
	private String commitId;
	private String server;
	private int port;
	private String path;
	private boolean isFinish;
	
	public FileThread(String commitId, String server, int port, String path) {
		this.commitId = commitId;
		this.server = server;
		this.port = port;
		this.path = path;
		this.isFinish = false;
	}
	
	public FileThread(String server,int port,String path) {
		this.commitId = Utils.getCommitId();
		if(this.commitId == null){
			System.out.println("commitId == null reset");
			commitId=Utils.formatDate();
		}
		this.server = server;
		this.port = port;
		this.path = path;
		this.isFinish = false;
	}
	
	public boolean isFinished(){
		return isFinish;
	}
	
	@Override
	public void run() {
		try {
			Socket socket = new Socket(server, port);
			File file = new File(path);
			DataOutputStream outputStream = new DataOutputStream(socket.getOutputStream());
			//先写commitId
			outputStream.writeUTF(commitId);
			outputStream.flush();
			//再写文件名称
			outputStream.writeUTF(file.getName());
			outputStream.flush();
			//开始写文件的内容
			FileInputStream inputStream = new FileInputStream(file);
			int len = -1;
			byte[] buffer = new byte[8096];
			while(true){
				len = inputStream.read(buffer);
				if(len < 0){
					break;
				}
				else{
					outputStream.write(buffer, 0, len);
				}
			}
			System.out.println("Client send finish...");
			isFinish = true;
		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
